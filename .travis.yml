# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

# list any PHP version you want to test against
php:
  # aliased to a recent 5.6.x version
  - 5.6

env:
  - mysql

services:
  - mysql

before_install:
  - sudo apt-key adv --keyserver keys.gnupg.net --recv 6DA70622
  - sudo echo "deb http://downloads.ortussolutions.com/debs/noarch /" | sudo tee -a /etc/apt/sources.list.d/commandbox.list
  - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
  - sudo echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse" | sudo tee -a /etc/apt/sources.list.d/mongodb-org-3.2.list
 
install:
  # Manual Install
  - sudo apt-get update
  - sudo apt-get --assume-yes install zip unzip commandbox apache2 python python-mysqldb libxml2-utils iptables tree
  # Commandbox setup
  - box install
  - box server start port=8080 rewritesEnable=true openBrowser=false
  # pip
  - sudo pip install --upgrade pip pycrypto
  - sudo pip install simple-crypt MySQL-python pjson
  # other dependencies
  - printf "[Dolphin]\nSALT=test123\nPEPPER=test456\nMASTER=travis\nAMAZON=travis\n" > config/.salt

before_script:
  - sudo cat /etc/apache2/apache2.conf
  - sudo tree /home/travis/.CommandBox/server/EA993591DACEFA7F6B8E6DF5AF2383B1-dolphin-ui/lucee-4.5.2.018/
  - sudo cp .htaccess /home/travis/.CommandBox/server/EA993591DACEFA7F6B8E6DF5AF2383B1-dolphin-ui/lucee-4.5.2.018/.htaccess
  - sudo cat /home/travis/.CommandBox/server/EA993591DACEFA7F6B8E6DF5AF2383B1-dolphin-ui/lucee-4.5.2.018/.htaccess
  - box server restart
  # dolphin repos
  - git clone https://github.com/UMMS-Biocore/dolphin-tools.git /home/travis/build/dolphin_tools
  - git clone https://github.com/UMMS-Biocore/dolphin-bin.git /home/travis/build/dolphin-bin
  - git clone https://github.com/UMMS-Biocore/dolphin-genome-data.git /home/travis/build/dolphin-genome-data
  - sudo mkdir -p /home/travis/build/pub /home/travis/build/logs /var/www/html
  # Install apache, PHP, and supplimentary programs. curl and lynx-cur are for debugging the container.
  - sudo a2enmod actions
  - sudo a2enmod rewrite
  - echo "export PATH=/home/vagrant/.phpenv/bin:$PATH" | sudo tee -a /etc/apache2/envvars > /dev/null
  - echo "$(curl -fsSL https://gist.github.com/roderik/16d751c979fdeb5a14e3/raw/gistfile1.txt)" | sudo tee /etc/apache2/conf.d/phpconfig > /dev/null
  - echo "$(curl -fsSL https://gist.github.com/roderik/2eb301570ed4a1f4c33d/raw/gistfile1.txt)" | sed -e "s,PATH,`pwd`,g" | sudo tee /etc/apache2/sites-available/default > /dev/null
  # Manually set up the apache environment variables
  - PATH=$PATH:/home/travis/build/dolphin-bin
  - DOLPHIN_PARAMS_SECTION=Travis
  - sudo ln -s $(pwd) /var/www/html/dolphin
  # update database
  - gzip -d db/biocoredb.sql.gz
  - mysql -e "CREATE DATABASE biocore;" -uroot
  - mysql -e "CREATE USER 'bioinfo'@'localhost' IDENTIFIED BY 'bioinfo2013'; GRANT ALL ON *.* TO 'bioinfo'@'localhost';" -uroot
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/biocoredb.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_07_22_consolidated_1.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_08_31_wkeylist.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_10_16_ngs_createtables.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_10_27_tablegen_sidebar.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_11_05_user_group_requests.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_11_16_newuser.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_02_08_email_update.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_03_07_delete_runs.sql
  - mysql -e "use biocore; UPDATE ngs_samples set samplename = name;" -uroot
  - mysql -e "use biocore; INSERT INTO amazon_credentials ( aws_access_key_id, aws_secret_access_key, bucket ) VALUES ( 'test_access', 'test_secret', 'test_bucket' );" -uroot
  - mysql -e "use biocore; INSERT INTO ngs_organism (organism) VALUES ('human'); UPDATE ngs_samples SET organism_id = 1;" -uroot
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_05_09_aws.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_05_11_rechecksum.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_07_01_aws.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_07_07_salt.sql
  - sudo service apache2 restart
  - sudo sed -i 's/localhost\/dolphin/localhost\:8080/g' /home/travis/build/dolphin_tools/default_params/config.ini
  - box server status --verbose
  - curl http://localhost:8080/
  - curl http://localhost:8080/phpinfo.php
  - curl http://localhost:8080/public/api/service.php
 
script:
  #	ajax - initial mapping
  - phpunit unitTesting/ngsimport_unittest.php
  - phpunit unitTesting/ajax/ngsalterdb_unittest.php
  #	Run workflow
  - python unitTesting/travis_test.py
  - cd scripts
  - mkdir -p ../tmp/logs/run4
  - python dolphin_wrapper.py -r 4 -c Travis
  #	ajax
  #- phpunit unitTesting/ajax/tablegenerator_unittest.php
  #- phpunit unitTesting/ajax/statquerydb_unittest.php
  #- phpunit unitTesting/ajax/sessionrequests_unittest.php
  #- phpunit unitTesting/ajax/profiledb_unittest.php
  #- phpunit unitTesting/ajax/ngsquerydb_unittest.php
  #- phpunit unitTesting/ajax/ngsfastlanedb_unittest.php
  #- phpunit unitTesting/ajax/ngs_tables_unittest.php
  #- phpunit unitTesting/ajax/kill_pid_unittest.php
  #- phpunit unitTesting/ajax/initialmappingdb_unittest.php
  #- phpunit unitTesting/ajax/dolphinfuncs_unittest.php
  #- phpunit unitTesting/ajax/dataservice_unittest.php
  #- phpunit unitTesting/ajax/datajobs_unittest.php
  #- phpunit unitTesting/ajax/dataerrorlogs_unittest.php
  #- phpunit unitTesting/ajax/dashboardquerydb_unittest.php
  #- phpunit unitTesting/ajax/browse_edit_unittest.php
  #- phpunit unitTesting/ajax/admindashboardquerydb_unittest.php
  #- phpunit unitTesting/ajax/adminstatquerydb_unittest.php
  #	api
  #- phpunit unitTesting/api/funcs_unittest.php

after_script:
  - mysql -e "show databases;" -uroot
  - mysql -e "use biocore; show tables;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_samples;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_lanes;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_experiment_series;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_dirs;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_runlist;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_runparams;" -uroot
  - mysql -e "use biocore; SELECT * FROM report_list;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_createdtables;" -uroot
  - mysql -e "use biocore; SELECT * FROM amazon_credentials;" -uroot
  - mysql -e "use biocore; SELECT * FROM groups;" -uroot
  - mysql -e "use biocore; SELECT * FROM user_group_requests;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_wkeylist;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_organism;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_fastq_files" -uroot
  - mysql -e "use biocore; SELECT * FROM galaxy_runs" -uroot
  - mysql -e "use biocore; SELECT * FROM users" -uroot
  - mysql -e "use biocore; SELECT * FROM jobs" -uroot
  - mysql -e "use biocore; SELECT * FROM services" -uroot
  - mysql -e "use biocore; SELECT * FROM jobstats" -uroot
  - mysql -e "use biocore; SELECT * FROM workflows" -uroot
  - mysql -e "use biocore; SELECT * FROM service_run" -uroot
  - mysql -e "use biocore; SELECT * FROM jobstats" -uroot
  
