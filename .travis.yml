# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

# list any PHP version you want to test against
php:
  # aliased to a recent 5.6.x version
  - 5.6

env:
  - mysql

services:
  - mysql
 
install:
  # Manual Install
  - sudo apt-get --assume-yes update
  - sudo apt-get --assume-yes install libapache2-mod-php5 php5-mcrypt php5-mysqlnd php5-gd php-pear php-apc php5-curl curl lynx-cur mysql-server libreadline-dev libsqlite3-dev libbz2-dev libssl-dev python python-dev libmysqlclient-dev python-pip git expect default-jre r-base r-base-dev libxml2-dev software-properties-common libcurl4-gnutls-dev gdebi-core wget tree
  # pip
  - sudo pip install --upgrade pip pycrypto urllib3
  - sudo pip install simple-crypt MySQL-python pjson
  # other dependencies
  - printf "[Dolphin]\nSALT=test123\nPEPPER=test456\nMASTER=travis\nAMAZON=travis\n" > config/.salt

before_script:
  # Install apache, PHP, and supplimentary programs. curl and lynx-cur are for debugging the container.
  #- sudo a2enmod actions
  #- sudo a2enmod php5
  #- sudo a2enmod rewrite
  #- echo "export PATH=/home/vagrant/.phpenv/bin:$PATH" | sudo tee -a /etc/apache2/envvars > /dev/null
  #- echo "$(curl -fsSL https://gist.github.com/roderik/16d751c979fdeb5a14e3/raw/gistfile1.txt)" | sudo tee /etc/apache2/conf.d/phpconfig > /dev/null
  #- echo "$(curl -fsSL https://gist.github.com/roderik/2eb301570ed4a1f4c33d/raw/gistfile1.txt)" | sed -e "s,PATH,`pwd`,g" | sudo tee /etc/apache2/sites-available/default > /dev/null
  #- cat /etc/php5/apache2/php.ini
  #- cat /etc/php5/apache2/conf.d
  #- sudo sed -i "s/short_open_tag = Off/short_open_tag = On/" /etc/php5/apache2/php.ini
  #- sudo sed -i "s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/" /etc/php5/apache2/php.ini
  # dolphin repos
  - git clone https://github.com/UMMS-Biocore/dolphin-tools.git /home/travis/build/dolphin_tools
  - git clone https://github.com/UMMS-Biocore/dolphin-bin.git /home/travis/build/dolphin-bin
  - git clone https://github.com/UMMS-Biocore/dolphin-genome-data.git /home/travis/build/dolphin-genome-data
  - sudo mkdir -p /home/travis/build/pub /home/travis/build/logs
  - sudo ln -s $(pwd) /var/www/dolphin
  # Manually set up the apache environment variables
  - mysql -u root -e "CREATE USER 'myproject'@'localhost' IDENTIFIED BY 'mypass'"
  - mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'myproject'@'localhost' WITH GRANT OPTION;"
  - PATH=$PATH:/home/travis/build/dolphin-bin
  - DOLPHIN_PARAMS_SECTION=Travis
  #- APACHE_RUN_USER=www-data
  #- APACHE_RUN_GROUP=www-data
  #- APACHE_LOG_DIR=/var/log/apache2
  #- APACHE_LOCK_DIR=/var/lock/apache2
  #- APACHE_PID_FILE=/var/run/apache2.pid
  #- sudo touch apache-config.conf /etc/apache2/sites-enabled/000-default.conf
  #- sudo echo "ServerName localhost" | sudo tee /etc/apache2/conf-available/fqdn.conf
  #- sudo echo "export DOLPHIN_PARAMS_SECTION="${DOLPHIN_PARAMS_SECTION} >> /etc/apache2/envvars
  #- sudo mkdir -p /var/www/.java/.systemPrefs
  #- sudo mkdir /var/www/.java/.userPrefs
  #- sudo chmod -R 755 /var/www/.java
  #- sudo chown -R ${APACHE_RUN_USER}:${APACHE_RUN_GROUP} /var/www
  #- sudo echo "export JAVA_OPTS=\"-Djava.util.prefs.systemRoot=/var/www/.java Djava.util.prefs.userRoot=/var/www/.java/.userPrefs\"" >> /etc/apache2/envvars
  #- sudo service apache2 start
  # update database
  - gzip -d db/biocoredb.sql.gz
  - mysql -e "CREATE DATABASE biocore;" -uroot
  - mysql -e "CREATE USER 'bioinfo'@'localhost' IDENTIFIED BY 'bioinfo2013'; GRANT ALL ON *.* TO 'bioinfo'@'localhost';" -uroot
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/biocoredb.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_07_22_consolidated_1.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_08_31_wkeylist.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_10_16_ngs_createtables.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_10_27_tablegen_sidebar.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_11_05_user_group_requests.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2015_11_16_newuser.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_02_08_email_update.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_03_07_delete_runs.sql
  - mysql -e "use biocore; UPDATE ngs_samples set samplename = name;" -uroot
  - mysql -e "use biocore; INSERT INTO amazon_credentials ( aws_access_key_id, aws_secret_access_key, bucket ) VALUES ( 'test_access', 'test_secret', 'test_bucket' );" -uroot
  - mysql -e "use biocore; INSERT INTO ngs_organism (organism) VALUES ('human'); UPDATE ngs_samples SET organism_id = 1;" -uroot
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_05_09_aws.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_05_11_rechecksum.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_07_01_aws.sql
  - mysql --user=bioinfo --password=bioinfo2013 biocore < db/2016_07_07_salt.sql
  - curl http://localhost/
  - curl http://localhost/dolphin/phpinfo.php
  - curl http://localhost/dolphin/public/api/service.php
  - ps -ef
  - sed -i 's/dolphin/dolphin\/public/g' /home/travs/build/dolphin_tools/default_params/config.ini
 
script:
  #	ajax - initial mapping
  - phpunit unitTesting/ngsimport_unittest.php
  - phpunit unitTesting/ajax/ngsalterdb_unittest.php
  #	Run workflow
  - python unitTesting/travis_test.py
  - cd scripts
  - mkdir -p ../tmp/logs/run4
  - sudo python dolphin_wrapper.py -r 4 -c Travis
  #	ajax
  #- phpunit unitTesting/ajax/tablegenerator_unittest.php
  #- phpunit unitTesting/ajax/statquerydb_unittest.php
  #- phpunit unitTesting/ajax/sessionrequests_unittest.php
  #- phpunit unitTesting/ajax/profiledb_unittest.php
  #- phpunit unitTesting/ajax/ngsquerydb_unittest.php
  #- phpunit unitTesting/ajax/ngsfastlanedb_unittest.php
  #- phpunit unitTesting/ajax/ngs_tables_unittest.php
  #- phpunit unitTesting/ajax/kill_pid_unittest.php
  #- phpunit unitTesting/ajax/initialmappingdb_unittest.php
  #- phpunit unitTesting/ajax/dolphinfuncs_unittest.php
  #- phpunit unitTesting/ajax/dataservice_unittest.php
  #- phpunit unitTesting/ajax/datajobs_unittest.php
  #- phpunit unitTesting/ajax/dataerrorlogs_unittest.php
  #- phpunit unitTesting/ajax/dashboardquerydb_unittest.php
  #- phpunit unitTesting/ajax/browse_edit_unittest.php
  #- phpunit unitTesting/ajax/admindashboardquerydb_unittest.php
  #- phpunit unitTesting/ajax/adminstatquerydb_unittest.php
  #	api
  #- phpunit unitTesting/api/funcs_unittest.php

after_script:
  - mysql -e "show databases;" -uroot
  - mysql -e "use biocore; show tables;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_samples;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_lanes;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_experiment_series;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_dirs;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_runlist;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_runparams;" -uroot
  - mysql -e "use biocore; SELECT * FROM report_list;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_createdtables;" -uroot
  - mysql -e "use biocore; SELECT * FROM amazon_credentials;" -uroot
  - mysql -e "use biocore; SELECT * FROM groups;" -uroot
  - mysql -e "use biocore; SELECT * FROM user_group_requests;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_wkeylist;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_organism;" -uroot
  - mysql -e "use biocore; SELECT * FROM ngs_fastq_files" -uroot
  - mysql -e "use biocore; SELECT * FROM galaxy_runs" -uroot
  - mysql -e "use biocore; SELECT * FROM users" -uroot
  - mysql -e "use biocore; SELECT * FROM jobs" -uroot
  - mysql -e "use biocore; SELECT * FROM services" -uroot
  - mysql -e "use biocore; SELECT * FROM jobstats" -uroot
  - mysql -e "use biocore; SELECT * FROM workflows" -uroot
  - mysql -e "use biocore; SELECT * FROM service_run" -uroot
  - mysql -e "use biocore; SELECT * FROM jobstats" -uroot
  
